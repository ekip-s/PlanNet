user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6";

    server {
        listen 80;
        server_name plannet.site plannet.site;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://plannet.site$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name plannet.site;

        ssl_certificate /etc/letsencrypt/live/plannet.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/plannet.site/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_pass http://plannet_front_app:5173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_intercept_errors on;
            error_page 404 = /index.html;
            proxy_redirect off;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
        }

        location /auth/ {
            proxy_pass            http://keycloak:8080;
            proxy_set_header      Host               $host;
            proxy_set_header      X-Real-IP          $remote_addr;
            proxy_set_header      X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header      X-Forwarded-Proto  https;
            proxy_set_header      X-Forwarded-Host   $host;
            proxy_set_header      X-Forwarded-Port   $server_port;
            proxy_set_header      X-Forwarded-Prefix /auth;

            proxy_http_version    1.1;
            proxy_set_header      Upgrade            $http_upgrade;
            proxy_set_header      Connection         "upgrade";

            proxy_redirect        off;
        }

        location /swagger-ui/ {
            proxy_pass http://task_master:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
    
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
    
            proxy_redirect off;
            proxy_buffering off;
        }

        location = /v3/api-docs/ {
            return 301 /v3/api-docs;
        }

        location ~ ^/v3/api-docs(/|$) {
            proxy_pass http://task_master:8081$request_uri;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_buffering off;
        }

        location /api-docs/swagger-config {
            proxy_pass         http://task_master:8081;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host  $host;
            proxy_set_header   X-Forwarded-Port  $server_port;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
    
            proxy_redirect off;
            proxy_buffering off;
        }

        location /task/api/v1 {
            proxy_pass http://task_master:8081;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_buffering off;
        }
    }

    server {
        listen 443 ssl;
        server_name www.plannet.site;

        ssl_certificate /etc/letsencrypt/live/plannet.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/plannet.site/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        return 301 https://plannet.site$request_uri;
    }
}