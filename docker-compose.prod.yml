services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - main-network
      - keycloak-main-network

  plannet_front_app:
    build:
      context: .
      dockerfile: plannet_front_app/Dockerfile
    expose:
      - "5173"
    restart: always
    networks:
      - main-network
      - keycloak-main-network

  task_master_db:
    image: postgres:16.2
    container_name: task_master_db
    environment:
      - POSTGRES_DB=${TASK_MASTER_DB}
      - POSTGRES_USER=${TASK_MASTER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${TASK_MASTER_POSTGRES_PASSWORD}
    volumes:
      - postgresdata_task:/var/lib/postgresql/data
    restart: always 
    networks: 
      - task-master-network    

  task_master:
    build:
      context: .
      dockerfile: plannet_backend_app/task_master/Dockerfile
      network: host
    depends_on:
      - task_master_db
    environment:
      - ENV=${ENV}
      - TASK_MASTER_PORT=${TASK_MASTER_PORT}
      - TASK_MASTER_DB=${TASK_MASTER_DB}
      - TASK_MASTER_POSTGRES_USER=${TASK_MASTER_POSTGRES_USER}
      - TASK_MASTER_POSTGRES_PASSWORD=${TASK_MASTER_POSTGRES_PASSWORD}
      - SWAGGER_CLIENT_SECRET=${SWAGGER_CLIENT_SECRET}
    networks:
      - main-network
      - keycloak-main-network
      - task-master-network
    restart: always     

  keycloak-db:
    image: postgres:16.2
    container_name: keycloak_db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgresdata:/var/lib/postgresql/data
    restart: always 
    networks: 
      - keycloak-db-network
    
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: keycloak
    command: 
      - start
      - --import-realm
      - --http-relative-path=/auth
      - --proxy-headers=forwarded
      - --hostname-strict=false
      - --hostname=https://plannet.site/auth
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      # Аутентификация администратора
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      # Настройки хоста (актуальная версия v2)
      KC_HOSTNAME: plannet.site
      KC_HOSTNAME_URL: https://plannet.site
      KC_HOSTNAME_ADMIN_URL: https://plannet.site/auth/admin
      # Настройки проксирования
      KC_PROXY: edge 
      KC_PROXY_HEADERS: forwarded
      KC_HTTP_ENABLED: true 
      # Отключаем проверки для работы за прокси
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HOSTNAME_STRICT_BACKCHANNEL: "false"
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "false"
      # Логирование
      KC_LOG_LEVEL: DEBUG
    volumes:
      - ./realm-config.json:/opt/keycloak/data/import/realm-config.json  
    restart: always 
    networks: 
      - keycloak-db-network  
      - keycloak-main-network

volumes:
  cert_data:
  postgresdata:  
  postgresdata_task:  

networks:
  main-network:
    driver: bridge
  keycloak-db-network:
    driver: bridge  
  keycloak-main-network:
    driver: bridge  
    internal: false
  task-master-network:
    driver: bridge  